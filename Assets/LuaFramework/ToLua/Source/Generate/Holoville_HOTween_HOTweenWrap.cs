//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Holoville_HOTween_HOTweenWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Holoville.HOTween.HOTween), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("To", To);
		L.RegFunction("From", From);
		L.RegFunction("Punch", Punch);
		L.RegFunction("Shake", Shake);
		L.RegFunction("EnableOverwriteManager", EnableOverwriteManager);
		L.RegFunction("DisableOverwriteManager", DisableOverwriteManager);
		L.RegFunction("Pause", Pause);
		L.RegFunction("Play", Play);
		L.RegFunction("PlayForward", PlayForward);
		L.RegFunction("PlayBackwards", PlayBackwards);
		L.RegFunction("Rewind", Rewind);
		L.RegFunction("Restart", Restart);
		L.RegFunction("RestartIncremental", RestartIncremental);
		L.RegFunction("Complete", Complete);
		L.RegFunction("Kill", Kill);
		L.RegFunction("GetAllTweens", GetAllTweens);
		L.RegFunction("GetAllPlayingTweens", GetAllPlayingTweens);
		L.RegFunction("GetAllPausedTweens", GetAllPausedTweens);
		L.RegFunction("GetTweensById", GetTweensById);
		L.RegFunction("GetTweensByIntId", GetTweensByIntId);
		L.RegFunction("GetTweenersByTarget", GetTweenersByTarget);
		L.RegFunction("IsTweening", IsTweening);
		L.RegFunction("IsLinkedTo", IsLinkedTo);
		L.RegFunction("GetTweenInfos", GetTweenInfos);
		L.RegFunction("Reverse", Reverse);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("AUTHOR", get_AUTHOR, null);
		L.RegVar("VERSION", get_VERSION, null);
		L.RegVar("IS_MICRO", get_IS_MICRO, null);
		L.RegVar("defUpdateType", get_defUpdateType, set_defUpdateType);
		L.RegVar("defTimeScale", get_defTimeScale, set_defTimeScale);
		L.RegVar("defEaseType", get_defEaseType, set_defEaseType);
		L.RegVar("defEaseOvershootOrAmplitude", get_defEaseOvershootOrAmplitude, set_defEaseOvershootOrAmplitude);
		L.RegVar("defEasePeriod", get_defEasePeriod, set_defEasePeriod);
		L.RegVar("defLoopType", get_defLoopType, set_defLoopType);
		L.RegVar("showPathGizmos", get_showPathGizmos, set_showPathGizmos);
		L.RegVar("warningLevel", get_warningLevel, set_warningLevel);
		L.RegVar("totTweens", get_totTweens, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Holoville.HOTween.HOTween.Init();
				return 0;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(bool)))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				Holoville.HOTween.HOTween.Init(arg0);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(bool), typeof(bool), typeof(bool)))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				Holoville.HOTween.HOTween.Init(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Init");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int To(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(Holoville.HOTween.TweenParms)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				Holoville.HOTween.TweenParms arg2 = (Holoville.HOTween.TweenParms)ToLua.ToObject(L, 3);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.To(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.To(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object), typeof(bool)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				bool arg4 = LuaDLL.lua_toboolean(L, 5);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.To(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object), typeof(bool), typeof(Holoville.HOTween.EaseType), typeof(float)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				bool arg4 = LuaDLL.lua_toboolean(L, 5);
				Holoville.HOTween.EaseType arg5 = (Holoville.HOTween.EaseType)ToLua.ToObject(L, 6);
				float arg6 = (float)LuaDLL.lua_tonumber(L, 7);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.To(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.To");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int From(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(Holoville.HOTween.TweenParms)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				Holoville.HOTween.TweenParms arg2 = (Holoville.HOTween.TweenParms)ToLua.ToObject(L, 3);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.From(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.From(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object), typeof(bool)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				bool arg4 = LuaDLL.lua_toboolean(L, 5);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.From(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object), typeof(bool), typeof(Holoville.HOTween.EaseType), typeof(float)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				bool arg4 = LuaDLL.lua_toboolean(L, 5);
				Holoville.HOTween.EaseType arg5 = (Holoville.HOTween.EaseType)ToLua.ToObject(L, 6);
				float arg6 = (float)LuaDLL.lua_tonumber(L, 7);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.From(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.From");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Punch(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(Holoville.HOTween.TweenParms), typeof(float), typeof(float)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				Holoville.HOTween.TweenParms arg2 = (Holoville.HOTween.TweenParms)ToLua.ToObject(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.Punch(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object), typeof(float), typeof(float)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.Punch(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object), typeof(bool), typeof(float), typeof(float)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				bool arg4 = LuaDLL.lua_toboolean(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				float arg6 = (float)LuaDLL.lua_tonumber(L, 7);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.Punch(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Punch");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Shake(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(Holoville.HOTween.TweenParms), typeof(float), typeof(float)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				Holoville.HOTween.TweenParms arg2 = (Holoville.HOTween.TweenParms)ToLua.ToObject(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.Shake(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object), typeof(float), typeof(float)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.Shake(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(float), typeof(string), typeof(object), typeof(bool), typeof(float), typeof(float)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				bool arg4 = LuaDLL.lua_toboolean(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				float arg6 = (float)LuaDLL.lua_tonumber(L, 7);
				Holoville.HOTween.Tweener o = Holoville.HOTween.HOTween.Shake(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Shake");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableOverwriteManager(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 1);
			Holoville.HOTween.HOTween.EnableOverwriteManager(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisableOverwriteManager(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Holoville.HOTween.HOTween.DisableOverwriteManager();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Pause(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				int o = Holoville.HOTween.HOTween.Pause();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int o = Holoville.HOTween.HOTween.Pause(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int o = Holoville.HOTween.HOTween.Pause(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Pause(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Sequence)))
			{
				Holoville.HOTween.Sequence arg0 = (Holoville.HOTween.Sequence)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Pause(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				int o = Holoville.HOTween.HOTween.Pause(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Pause");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Play(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				int o = Holoville.HOTween.HOTween.Play();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int o = Holoville.HOTween.HOTween.Play(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int o = Holoville.HOTween.HOTween.Play(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Play(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Sequence)))
			{
				Holoville.HOTween.Sequence arg0 = (Holoville.HOTween.Sequence)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Play(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(bool)))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				int o = Holoville.HOTween.HOTween.Play(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				int o = Holoville.HOTween.HOTween.Play(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(string), typeof(bool)))
			{
				string arg0 = ToLua.ToString(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Play(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(bool)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Play(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener), typeof(bool)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Play(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(bool)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Play(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Play");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayForward(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				int o = Holoville.HOTween.HOTween.PlayForward();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Sequence)))
			{
				Holoville.HOTween.Sequence arg0 = (Holoville.HOTween.Sequence)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(bool)))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(string), typeof(bool)))
			{
				string arg0 = ToLua.ToString(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(bool)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener), typeof(bool)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(bool)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.PlayForward(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.PlayForward");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayBackwards(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				int o = Holoville.HOTween.HOTween.PlayBackwards();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int o = Holoville.HOTween.HOTween.PlayBackwards(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int o = Holoville.HOTween.HOTween.PlayBackwards(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.PlayBackwards(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Sequence)))
			{
				Holoville.HOTween.Sequence arg0 = (Holoville.HOTween.Sequence)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.PlayBackwards(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				int o = Holoville.HOTween.HOTween.PlayBackwards(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.PlayBackwards");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Rewind(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				int o = Holoville.HOTween.HOTween.Rewind();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int o = Holoville.HOTween.HOTween.Rewind(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int o = Holoville.HOTween.HOTween.Rewind(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Rewind(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Sequence)))
			{
				Holoville.HOTween.Sequence arg0 = (Holoville.HOTween.Sequence)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Rewind(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(bool)))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				int o = Holoville.HOTween.HOTween.Rewind(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				int o = Holoville.HOTween.HOTween.Rewind(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(string), typeof(bool)))
			{
				string arg0 = ToLua.ToString(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Rewind(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(bool)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Rewind(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener), typeof(bool)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Rewind(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(bool)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Rewind(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Rewind");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Restart(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				int o = Holoville.HOTween.HOTween.Restart();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int o = Holoville.HOTween.HOTween.Restart(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int o = Holoville.HOTween.HOTween.Restart(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Restart(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Sequence)))
			{
				Holoville.HOTween.Sequence arg0 = (Holoville.HOTween.Sequence)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Restart(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(bool)))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				int o = Holoville.HOTween.HOTween.Restart(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				int o = Holoville.HOTween.HOTween.Restart(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(string), typeof(bool)))
			{
				string arg0 = ToLua.ToString(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Restart(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(bool)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Restart(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener), typeof(bool)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Restart(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(bool)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Restart(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Restart");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RestartIncremental(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				int o = Holoville.HOTween.HOTween.RestartIncremental();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int o = Holoville.HOTween.HOTween.RestartIncremental(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int o = Holoville.HOTween.HOTween.RestartIncremental(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.RestartIncremental(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				int o = Holoville.HOTween.HOTween.RestartIncremental(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.RestartIncremental");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Complete(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				int o = Holoville.HOTween.HOTween.Complete();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int o = Holoville.HOTween.HOTween.Complete(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int o = Holoville.HOTween.HOTween.Complete(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Complete(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Sequence)))
			{
				Holoville.HOTween.Sequence arg0 = (Holoville.HOTween.Sequence)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Complete(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				int o = Holoville.HOTween.HOTween.Complete(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Complete");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Kill(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				int o = Holoville.HOTween.HOTween.Kill();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int o = Holoville.HOTween.HOTween.Kill(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int o = Holoville.HOTween.HOTween.Kill(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Kill(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Sequence)))
			{
				Holoville.HOTween.Sequence arg0 = (Holoville.HOTween.Sequence)ToLua.ToObject(L, 1);
				int o = Holoville.HOTween.HOTween.Kill(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				int o = Holoville.HOTween.HOTween.Kill(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Kill");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllTweens(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			System.Collections.Generic.List<Holoville.HOTween.IHOTweenComponent> o = Holoville.HOTween.HOTween.GetAllTweens();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllPlayingTweens(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			System.Collections.Generic.List<Holoville.HOTween.IHOTweenComponent> o = Holoville.HOTween.HOTween.GetAllPlayingTweens();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllPausedTweens(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			System.Collections.Generic.List<Holoville.HOTween.IHOTweenComponent> o = Holoville.HOTween.HOTween.GetAllPausedTweens();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTweensById(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			System.Collections.Generic.List<Holoville.HOTween.IHOTweenComponent> o = Holoville.HOTween.HOTween.GetTweensById(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTweensByIntId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			System.Collections.Generic.List<Holoville.HOTween.IHOTweenComponent> o = Holoville.HOTween.HOTween.GetTweensByIntId(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTweenersByTarget(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			object arg0 = ToLua.ToVarObject(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			System.Collections.Generic.List<Holoville.HOTween.Tweener> o = Holoville.HOTween.HOTween.GetTweenersByTarget(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsTweening(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.ToString(L, 1);
				bool o = Holoville.HOTween.HOTween.IsTweening(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				bool o = Holoville.HOTween.HOTween.IsTweening(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(object)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				bool o = Holoville.HOTween.HOTween.IsTweening(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.IsTweening");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsLinkedTo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			object arg0 = ToLua.ToVarObject(L, 1);
			bool o = Holoville.HOTween.HOTween.IsLinkedTo(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTweenInfos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Holoville.HOTween.Core.TweenInfo[] o = Holoville.HOTween.HOTween.GetTweenInfos();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reverse(IntPtr L)
	{
try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(bool)))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				int o = Holoville.HOTween.HOTween.Reverse(arg0, false);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Tweener), typeof(bool)))
			{
				Holoville.HOTween.Tweener arg0 = (Holoville.HOTween.Tweener)ToLua.ToObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Reverse(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Holoville.HOTween.Sequence), typeof(bool)))
			{
				Holoville.HOTween.Sequence arg0 = (Holoville.HOTween.Sequence)ToLua.ToObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Reverse(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(string), typeof(bool)))
			{
				string arg0 = ToLua.ToString(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Reverse(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(bool)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Reverse(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(object), typeof(bool)))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				int o = Holoville.HOTween.HOTween.Reverse(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Holoville.HOTween.HOTween.Reverse");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AUTHOR(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Holoville.HOTween.HOTween.AUTHOR);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VERSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Holoville.HOTween.HOTween.VERSION);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IS_MICRO(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Holoville.HOTween.HOTween.IS_MICRO);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_defUpdateType(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Holoville.HOTween.HOTween.defUpdateType);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_defTimeScale(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, Holoville.HOTween.HOTween.defTimeScale);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_defEaseType(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Holoville.HOTween.HOTween.defEaseType);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_defEaseOvershootOrAmplitude(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, Holoville.HOTween.HOTween.defEaseOvershootOrAmplitude);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_defEasePeriod(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, Holoville.HOTween.HOTween.defEasePeriod);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_defLoopType(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Holoville.HOTween.HOTween.defLoopType);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showPathGizmos(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Holoville.HOTween.HOTween.showPathGizmos);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_warningLevel(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Holoville.HOTween.HOTween.warningLevel);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_totTweens(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Holoville.HOTween.HOTween.totTweens);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_defUpdateType(IntPtr L)
	{
		try
		{
			Holoville.HOTween.UpdateType arg0 = (Holoville.HOTween.UpdateType)ToLua.CheckObject(L, 2, typeof(Holoville.HOTween.UpdateType));
			Holoville.HOTween.HOTween.defUpdateType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_defTimeScale(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			Holoville.HOTween.HOTween.defTimeScale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_defEaseType(IntPtr L)
	{
		try
		{
			Holoville.HOTween.EaseType arg0 = (Holoville.HOTween.EaseType)ToLua.CheckObject(L, 2, typeof(Holoville.HOTween.EaseType));
			Holoville.HOTween.HOTween.defEaseType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_defEaseOvershootOrAmplitude(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			Holoville.HOTween.HOTween.defEaseOvershootOrAmplitude = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_defEasePeriod(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			Holoville.HOTween.HOTween.defEasePeriod = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_defLoopType(IntPtr L)
	{
		try
		{
			Holoville.HOTween.LoopType arg0 = (Holoville.HOTween.LoopType)ToLua.CheckObject(L, 2, typeof(Holoville.HOTween.LoopType));
			Holoville.HOTween.HOTween.defLoopType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showPathGizmos(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Holoville.HOTween.HOTween.showPathGizmos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_warningLevel(IntPtr L)
	{
		try
		{
			Holoville.HOTween.WarningLevel arg0 = (Holoville.HOTween.WarningLevel)ToLua.CheckObject(L, 2, typeof(Holoville.HOTween.WarningLevel));
			Holoville.HOTween.HOTween.warningLevel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

